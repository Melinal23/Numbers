#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
# even-valued terms.

#https://www.educative.io/edpresso/how-to-implement-the-fibonacci-sequence-in-python
def main():

    print(make_fib_iter(4000000))


def make_fib_rec(num):

    if num <= 1:
        return num
    else:
        return make_fib_rec(num-1) + make_fib_rec(num-2)

def make_fib_iter(num):
    start1 = 1
    start2 = 2

    curr = 0

    total_even = 0

    while(curr < num):
        curr = start1 + start2

        start1 = start2
        start2 = curr

        if start1 % 2 == 0:
            total_even += start1

    return total_even


def fibonacci(n):
    fib = 0
    nth = 0
    start1 = 0  # zero-th fib num
    start2 = 1  # first fib num

    while (nth <= n):
        fib = start1
        next_num = start2 + start1
        start1 = start2
        start2 = next_num
        nth += 1

    return fib

def fibonacci_golden_ratio(n):
    PHI = 1.6180339

    # Fibonacci numbers upto n = 5
    f = [0, 1, 1, 2, 3, 5]

    # Fibonacci numbers for n < 6
    if n < 6:
        return f[n]

    # Else start counting from
    # 5th term
    t = 5
    fn = 5

    while t < n:
        fn = round(fn * PHI)
        t += 1

    return fn

if __name__ == '__main__':
    main()
